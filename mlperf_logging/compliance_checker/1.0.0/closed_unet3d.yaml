- KEY:
    NAME:  global_batch_size
    REQ:   EXACTLY_ONE
    POST:  "s['samples_per_epoch'] = math.ceil(168 / v['value']) * v['value']"

- KEY:
    NAME:  opt_name
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  opt_base_learning_rate
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  opt_learning_rate_warmup_epochs
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0"

- KEY:
    NAME:  opt_learning_rate_decay_boundary_epochs
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  opt_learning_rate_decay_factor
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  opt_weight_decay
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  train_samples
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] == 168"

- KEY:
    NAME:  eval_samples
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] == 42"

- KEY:
    NAME:  eval_accuracy
    REQ:   AT_LEAST_ONE
    CHECK: >-
        'epoch_num' in v['metadata']
        and
        (
            (
                'last_eval_epoch' not in s and v['metadata']['epoch_num'] == math.ceil(1000 * 168 / s['samples_per_epoch'])
            ) or (
                'last_eval_epoch' in s and v['metadata']['epoch_num'] == s['last_eval_epoch'] + math.ceil(20 * 168 / s['samples_per_epoch'])
            )
        )
    POST: "s['last_eval_epoch'] = v['metadata']['epoch_num']"
    ATLEAST_ONE_CHECK: " v['value'] >= 0.908"

- KEY:
    NAME:  seed
    REQ:   EXACTLY_ONE

######################## CUSTOM ########################

- KEY:
    NAME:  opt_momentum
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  oversampling
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  training_input_shape
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  validation_input_shape
    REQ:   EXACTLY_ONE

- KEY:
    NAME:  validation_overlap
    REQ:   EXACTLY_ONE


